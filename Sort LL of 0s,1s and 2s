class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        // Add code here
        if(head==NULL || head->next==NULL ) return head;
        Node *dummy0=new Node(-1);
        Node *current0=dummy0;
        Node *dummy1=new Node(-1);
        Node *current1=dummy1;
        Node *dummy2=new Node(-1);
        Node *current2=dummy2;
        
        Node* p=head;
        while(p!=NULL){
            if(p->data==0){
               current0->next=p;
               current0=current0->next;;
              
               
            }
            else if(p->data==1){
               current1->next=p;
               current1=current1->next;
               
               
            }
            else{
               current2->next=p;
               current2=current2->next;
               
               
            }
            p=p->next;
        }
        current0->next = dummy1->next ? dummy1->next : dummy2->next;
        current1->next=dummy2->next;
        current2->next=NULL;
        
        delete dummy0;
        delete dummy1;
        delete dummy2;
        
        return dummy0->next;
    }
};

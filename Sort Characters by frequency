class Solution {
public:

    string frequencySort(string s) {
        unordered_map<char,int> mp;
        int n=s.length();
        for(int i=0;i<n;i++){
           mp[s[i]]++;
        }
        vector<pair<char,int>> freqmap(mp.begin(),mp.end());
        std::sort(freqmap.begin(), freqmap.end(), [](const std::pair<char, int>& a, const std::pair<char, int>& b) {
        return a.second > b.second;
    });
     std::string result;
    result.reserve(s.size()); // Reserve space to avoid multiple allocations
    for (const auto& pair : freqmap) {
        result.append(pair.second, pair.first);
    }

    return result;
    }
};
